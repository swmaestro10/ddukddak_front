{"ast":null,"code":"var _jsxFileName = \"/home/codeup/ddukddak/ddukddak_front/ddukddak/src/container/block_terminal.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport BlocklyDrawer, { Block, Category } from 'react-blockly-drawer';\nimport { fetchCode } from '../action/index';\nimport { blocks } from './blocks';\nimport './block_terminal.css';\n\nclass BlockTerminal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workspace: ''\n    }; // workspace있으면 불러오는 코드 추가 필요\n  }\n\n  onChangeState(code, workspace) {\n    this.props.fetchCode(code, workspace);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"block_terminal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(BlocklyDrawer, {\n      workspaceXML: this.state.workspace,\n      tools: blocks,\n      onChange: (code, workspace) => {\n        if (code !== \"\") {\n          this.onChangeState(code, workspace);\n        }\n      },\n      appearance: {\n        categories: {\n          Data: {\n            colour: '200'\n          },\n          Layer: {\n            colour: '150'\n          },\n          Training: {\n            colour: '100'\n          },\n          Demo: {\n            colour: '270'\n          },\n          test: {\n            colour: '160'\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Category, {\n      name: \"Variables\",\n      custom: \"VARIABLE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Category, {\n      name: \"Values\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Block, {\n      type: \"math_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Block, {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchCode\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(BlockTerminal);","map":{"version":3,"sources":["/home/codeup/ddukddak/ddukddak_front/ddukddak/src/container/block_terminal.js"],"names":["React","Component","connect","bindActionCreators","BlocklyDrawer","Block","Category","fetchCode","blocks","BlockTerminal","constructor","props","state","workspace","onChangeState","code","render","categories","Data","colour","Layer","Training","Demo","test","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AAEA,OAAOC,aAAP,IAAuBC,KAAvB,EAA8BC,QAA9B,QAA6C,sBAA7C;AAEA,SAAQC,SAAR,QAAwB,iBAAxB;AAEA,SAAQC,MAAR,QAAqB,UAArB;AACA,OAAO,sBAAP;;AAEA,MAAMC,aAAN,SAA4BR,SAA5B,CAAqC;AACjCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAG;AAAb,KAAb,CAFc,CAGd;AACH;;AACDC,EAAAA,aAAa,CAACC,IAAD,EAAMF,SAAN,EAAgB;AACzB,SAAKF,KAAL,CAAWJ,SAAX,CAAqBQ,IAArB,EAA0BF,SAA1B;AACH;;AACDG,EAAAA,MAAM,GAAE;AACJ,WACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACI,MAAA,YAAY,EAAI,KAAKJ,KAAL,CAAWC,SAD/B;AAEI,MAAA,KAAK,EAAEL,MAFX;AAGI,MAAA,QAAQ,EAAE,CAACO,IAAD,EAAMF,SAAN,KAAoB;AAC1B,YAAGE,IAAI,KAAK,EAAZ,EAAe;AACX,eAAKD,aAAL,CAAmBC,IAAnB,EAAwBF,SAAxB;AACH;AACJ,OAPL;AAQI,MAAA,UAAU,EACN;AACII,QAAAA,UAAU,EAAG;AACTC,UAAAA,IAAI,EAAG;AAAEC,YAAAA,MAAM,EAAG;AAAX,WADE;AAETC,UAAAA,KAAK,EAAG;AAAED,YAAAA,MAAM,EAAG;AAAX,WAFC;AAGTE,UAAAA,QAAQ,EAAG;AAAEF,YAAAA,MAAM,EAAG;AAAX,WAHF;AAITG,UAAAA,IAAI,EAAG;AAAEH,YAAAA,MAAM,EAAG;AAAX,WAJE;AAKTI,UAAAA,IAAI,EAAG;AAAEJ,YAAAA,MAAM,EAAG;AAAX;AALE;AADjB,OATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBR,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,WAAf;AAA2B,MAAA,MAAM,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBQ,EAoBR,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CApBQ,CADJ,CADA;AA6BH;;AAvCgC;;AA0CrC,SAASK,kBAAT,CAA4BC,QAA5B,EAAqC;AACjC,SAAOtB,kBAAkB,CAAC;AAACI,IAAAA;AAAD,GAAD,EAAakB,QAAb,CAAzB;AACH;;AAED,eAAevB,OAAO,CAAC,IAAD,EAAMsB,kBAAN,CAAP,CAAiCf,aAAjC,CAAf","sourcesContent":["import React, {Component}from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport BlocklyDrawer, {Block, Category} from 'react-blockly-drawer';\n\nimport {fetchCode} from '../action/index';\n\nimport {blocks} from './blocks';\nimport './block_terminal.css'\n\nclass BlockTerminal extends Component{\n    constructor(props){\n        super(props);\n        this.state = {workspace : ''};\n        // workspace있으면 불러오는 코드 추가 필요\n    }\n    onChangeState(code,workspace){\n        this.props.fetchCode(code,workspace);\n    }\n    render(){\n        return(\n        <div className=\"block_terminal\">\n            <BlocklyDrawer\n                workspaceXML = {this.state.workspace}\n                tools={blocks}\n                onChange={(code,workspace) => {\n                    if(code !== \"\"){\n                        this.onChangeState(code,workspace);\n                    }\n                }}\n                appearance = {\n                    {\n                        categories : {\n                            Data : { colour : '200' },\n                            Layer : { colour : '150' },\n                            Training : { colour : '100' },\n                            Demo : { colour : '270' },\n                            test : { colour : '160' },\n                        },\n                    }\n                }>\n\t\t\t\t<Category name=\"Variables\" custom=\"VARIABLE\" />\n\t\t\t\t<Category name=\"Values\" >\n\t\t\t\t\t<Block type=\"math_number\" />\n\t\t\t\t\t<Block type=\"text\" />\n\t\t\t\t</Category>                \n            </BlocklyDrawer>\n        </div>\n        );\n    }\n} \n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators({fetchCode},dispatch);\n}\n\nexport default connect(null,mapDispatchToProps)(BlockTerminal);\n"]},"metadata":{},"sourceType":"module"}