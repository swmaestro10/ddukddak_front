{"ast":null,"code":"var _jsxFileName = \"/home/codeup/ddukddak/ddukddak_front/ddukddak/src/container/block_terminal.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreator } from 'redux';\nimport BlocklyDrawer, { Block, Category } from 'react-blockly-drawer';\nimport { fetchCode } from '../action/index';\nimport { helloWorld, test_operation, test_print, short_math } from './blocks';\nimport './block_terminal.css';\n\nclass BlockTerminal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workspace: null\n    };\n  }\n\n  onChangeState(code, workspace) {\n    this.props.fetchCode(code);\n    this.setState({\n      workspace\n    });\n  }\n\n  render() {\n    React.createElement(\"div\", {\n      className: \"block_terminal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(BlocklyDrawer, {\n      workspaceXML: this.workspace,\n      tools: [helloWorld, test_operation, test_print, short_math],\n      onChange: (code, workspace) => {\n        if (code !== \"\") {\n          this.onChangeState(code, workspace);\n        }\n      },\n      appearance: {\n        categories: {\n          Demo: {\n            colour: '270'\n          },\n          test: {\n            colour: '160'\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Category, {\n      name: \"Variables\",\n      custom: \"VARIABLE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Category, {\n      name: \"Values\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Block, {\n      type: \"math_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Block, {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreator({\n    fetchCode\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(BlockTerminal);","map":{"version":3,"sources":["/home/codeup/ddukddak/ddukddak_front/ddukddak/src/container/block_terminal.js"],"names":["React","Component","connect","bindActionCreator","BlocklyDrawer","Block","Category","fetchCode","helloWorld","test_operation","test_print","short_math","BlockTerminal","constructor","props","state","workspace","onChangeState","code","setState","render","categories","Demo","colour","test","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,OAAhC;AAEA,OAAOC,aAAP,IAAuBC,KAAvB,EAA8BC,QAA9B,QAA6C,sBAA7C;AAEA,SAAQC,SAAR,QAAwB,iBAAxB;AAEA,SAAQC,UAAR,EAAmBC,cAAnB,EAAkCC,UAAlC,EAA6CC,UAA7C,QAA8D,UAA9D;AACA,OAAO,sBAAP;;AAEA,MAAMC,aAAN,SAA4BX,SAA5B,CAAqC;AACjCY,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAG;AADH,KAAb;AAGH;;AACDC,EAAAA,aAAa,CAACC,IAAD,EAAMF,SAAN,EAAgB;AACzB,SAAKF,KAAL,CAAWP,SAAX,CAAqBW,IAArB;AACA,SAAKC,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd;AACH;;AACDI,EAAAA,MAAM,GAAE;AACJ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACI,MAAA,YAAY,EAAI,KAAKJ,SADzB;AAEI,MAAA,KAAK,EAAE,CAACR,UAAD,EAAYC,cAAZ,EAA2BC,UAA3B,EAAsCC,UAAtC,CAFX;AAGI,MAAA,QAAQ,EAAE,CAACO,IAAD,EAAMF,SAAN,KAAoB;AAC1B,YAAGE,IAAI,KAAK,EAAZ,EAAe;AACX,eAAKD,aAAL,CAAmBC,IAAnB,EAAwBF,SAAxB;AACH;AACJ,OAPL;AAQI,MAAA,UAAU,EACN;AACIK,QAAAA,UAAU,EAAG;AACTC,UAAAA,IAAI,EAAG;AACHC,YAAAA,MAAM,EAAG;AADN,WADE;AAITC,UAAAA,IAAI,EAAG;AACHD,YAAAA,MAAM,EAAG;AADN;AAJE;AADjB,OATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAoBR,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,WAAf;AAA2B,MAAA,MAAM,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBQ,EAqBR,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CArBQ,CADJ;AA4BH;;AAxCgC;;AA2CrC,SAASE,kBAAT,CAA4BC,QAA5B,EAAqC;AACjC,SAAOvB,iBAAiB,CAAC;AAACI,IAAAA;AAAD,GAAD,EAAamB,QAAb,CAAxB;AACH;;AAED,eAAexB,OAAO,CAAC,IAAD,EAAMuB,kBAAN,CAAP,CAAiCb,aAAjC,CAAf","sourcesContent":["import React, {Component}from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreator} from 'redux';\n\nimport BlocklyDrawer, {Block, Category} from 'react-blockly-drawer';\n\nimport {fetchCode} from '../action/index';\n\nimport {helloWorld,test_operation,test_print,short_math} from './blocks';\nimport './block_terminal.css'\n\nclass BlockTerminal extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            workspace : null\n        };\n    }\n    onChangeState(code,workspace){\n        this.props.fetchCode(code);\n        this.setState({ workspace });\n    }\n    render(){\n        <div className=\"block_terminal\">\n            <BlocklyDrawer\n                workspaceXML = {this.workspace}\n                tools={[helloWorld,test_operation,test_print,short_math]}\n                onChange={(code,workspace) => {\n                    if(code !== \"\"){\n                        this.onChangeState(code,workspace);\n                    }\n                }}\n                appearance = {\n                    {\n                        categories : {\n                            Demo : {\n                                colour : '270'\n                            },\n                            test : {\n                                colour : '160'\n                            },\n                        },\n                    }\n                }>\n\t\t\t\t<Category name=\"Variables\" custom=\"VARIABLE\" />\n\t\t\t\t<Category name=\"Values\" >\n\t\t\t\t\t<Block type=\"math_number\" />\n\t\t\t\t\t<Block type=\"text\" />\n\t\t\t\t</Category>                \n            </BlocklyDrawer>\n        </div>\n    }\n} \n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreator({fetchCode},dispatch);\n}\n\nexport default connect(null,mapDispatchToProps)(BlockTerminal);\n"]},"metadata":{},"sourceType":"module"}